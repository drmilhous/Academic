digraph{
node [shape=record];
"0x40244e"[label="0x40244e|  push ebp
 mov ebp ,  esp
 and dword  [ ] , 
 sub esp , 
 push ebx
 xor ebx ,  ebx
 inc ebx
 or dword  [ ] ,  ebx
 push
 call
 test eax ,  eax
| 4754f5acc21bd47cb6c6f874c56736c0"] "0x40244e" -> "0x4025e1""0x40244e" -> "0x402474""0x4025e1"[label="0x4025e1|  xor eax ,  eax
 pop ebx
 mov esp ,  ebp
 pop ebp
 retn
| 252ab37691605f1b1000bbfed49693ba"] "0x402474"[label="0x402474|  and dword  [ ebp -0x10 ] , 
 xor eax ,  eax
 or dword  [ ] , 
 xor ecx ,  ecx
 push esi
 push edi
 mov dword  [ ] ,  ebx
 lea edi ,   [ ebp -0x28 ]
 push ebx
 cpuid
 mov esi ,  ebx
 pop ebx
 mov dword  [ edi ] ,  eax
 mov dword  [ edi + ] ,  esi
 mov dword  [ edi + ] ,  ecx
 mov dword  [ edi + ] ,  edx
 mov eax ,  dword  [ ebp -0x28 ]
 mov ecx ,  dword  [ ebp -0x1c ]
 mov dword  [ ebp -0x8 ] ,  eax
 xor ecx , 
 mov eax ,  dword  [ ebp -0x20 ]
 xor eax , 
 or ecx ,  eax
 mov eax ,  dword  [ ebp -0x24 ]
 push
 xor eax , 
 or ecx ,  eax
 pop eax
 push
 pop ecx
 push ebx
 cpuid
 mov esi ,  ebx
 pop ebx
 mov dword  [ edi ] ,  eax
 mov dword  [ edi + ] ,  esi
 mov dword  [ edi + ] ,  ecx
 mov dword  [ edi + ] ,  edx
| 6c33ce1dfb2acd4d42d11df8f24142d3"] "0x402474" -> "0x40251e""0x402474" -> "0x4024db""0x402474" -> "0x402524""0x40251e"[label="0x40251e|  mov edi ,  dword  [ ]
| 1686e1fcc883e19a33e687a6c8995b92"] "0x4024db"[label="0x4024db|  mov eax ,  dword  [ ebp -0x28 ]
 and eax , 
 cmp eax , 
| 08eb3192f851af781d5f0b8c4c9ebb56"] "0x4024db" -> "0x40250d""0x4024db" -> "0x4024ea""0x40256b"[label="0x40256b|  pop edi
 pop esi
 test eax , 
| afaf5b8ae8e749b84b3dddd516c46b6e"] "0x40256b" -> "0x402574""0x402539"[label="0x402539|  push
 pop eax
 xor ecx ,  ecx
 push ebx
 cpuid
 mov esi ,  ebx
 pop ebx
 lea ebx ,   [ ebp -0x28 ]
 mov dword  [ ebx ] ,  eax
 mov dword  [ ebx + ] ,  esi
 mov dword  [ ebx + ] ,  ecx
 mov dword  [ ebx + ] ,  edx
 mov eax ,  dword  [ ebp -0x24 ]
 test eax , 
 mov dword  [ ebp -0x10 ] ,  eax
 mov eax ,  dword  [ ebp -0x4 ]
| 1102f145136d5c75ebf785999f819fcd"] "0x402539" -> "0x402562""0x40250d"[label="0x40250d|  mov edi ,  dword  [ ]
 or edi , 
 mov dword  [ ] ,  edi
| 5d821b717c2c09cdd8fc4e7ab5a84bea"] "0x4024ea"[label="0x4024ea|  cmp eax , 
| d68a72d12b42e608bf418a108ae7e72c"] "0x4024ea" -> "0x4024f1""0x402574"[label="0x402574|  or dword  [ ] , 
 mov dword  [ ] , 
 test eax , 
| 0b327f8484ec106883d27004e2c2152c"] "0x402574" -> "0x40258c""0x402562"[label="0x402562|  or edi , 
 mov dword  [ ] ,  edi
| 2f9e5596aca62855e1adc47291cc1f7a"] "0x402524"[label="0x402524|  cmp dword  [ ebp -0x8 ] , 
 mov eax ,  dword  [ ebp -0x1c ]
 mov dword  [ ebp -0x18 ] ,  eax
 mov eax ,  dword  [ ebp -0x20 ]
 mov dword  [ ebp -0x4 ] ,  eax
 mov dword  [ ebp -0x14 ] ,  eax
| 25cb686e8c38da228c583b2ae62367ce"] "0x402524" -> "0x40256b""0x402524" -> "0x402539""0x4024f1"[label="0x4024f1|  cmp eax , 
| d68a72d12b42e608bf418a108ae7e72c"] "0x4024f1" -> "0x4024f8""0x40258c"[label="0x40258c|  test eax , 
| 0244909d1e59d357e9b889ac9c09631d"] "0x40258c" -> "0x402593""0x4024f8"[label="0x4024f8|  cmp eax , 
| d68a72d12b42e608bf418a108ae7e72c"] "0x4024f8" -> "0x4024ff""0x402593"[label="0x402593|  xor ecx ,  ecx
 xgetbv
 mov dword  [ ebp -0xc ] ,  eax
 mov dword  [ ebp -0x8 ] ,  edx
 mov eax ,  dword  [ ebp -0xc ]
 mov ecx ,  dword  [ ebp -0x8 ]
 and eax , 
 xor ecx ,  ecx
 cmp eax , 
| 3c8c7d9e688abf8e57b5ee13edfaedbf"] "0x402593" -> "0x4025ae""0x4024ff"[label="0x4024ff|  cmp eax , 
| d68a72d12b42e608bf418a108ae7e72c"] "0x4024ff" -> "0x402506""0x4025ae"[label="0x4025ae|  test ecx ,  ecx
| d9c15a157ed53aac16f6aed9e8875beb"] "0x4025ae" -> "0x4025b2""0x402506"[label="0x402506|  cmp eax , 
| d68a72d12b42e608bf418a108ae7e72c"] "0x4025b2"[label="0x4025b2|  mov eax ,  dword  [ ]
 or eax , 
 mov dword  [ ] , 
 test byte  [ ebp -0x10 ] ,  0x20
 mov dword  [ ] ,  eax
| c373a1f633b6d765326a8a3d82462de0"] "0x4025b2" -> "0x4025cf""0x4025cf"[label="0x4025cf|  or eax , 
 mov dword  [ ] , 
 mov dword  [ ] ,  eax
| 7cef0e26ea6382bbb6f8f29de5c7256e"] }